/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * BankCardsApi
 * OpenAPI spec version: 1.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export type GetApiCardGetCardsByOwnerParams = {
OwnerFirstName: string;
OwnerLastName: string;
};

export type GetApiCardGetCardByNumberParams = {
Number: string;
};

export interface CreateCardDto {
  number: string;
  cvv: string;
  ownerFirstName: string;
  ownerLastName: string;
}

export interface Card {
  id?: number;
  number?: string | null;
  cvv?: string | null;
  expirationDate?: string;
  ownerFirstName?: string | null;
  ownerLastName?: string | null;
}





  export const postApiCardCreateCard = <TData = AxiosResponse<Card>>(
    createCardDto: CreateCardDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/Card/CreateCard`,
      createCardDto,options
    );
  }

export const getApiCardGetAllCards = <TData = AxiosResponse<Card[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/Card/GetAllCards`,options
    );
  }

export const getApiCardGetCardByIdId = <TData = AxiosResponse<Card>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/Card/GetCardById/${id}`,options
    );
  }

export const getApiCardGetCardByNumber = <TData = AxiosResponse<Card>>(
    params: GetApiCardGetCardByNumberParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/Card/GetCardByNumber`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

export const getApiCardGetCardsByOwner = <TData = AxiosResponse<Card[]>>(
    params: GetApiCardGetCardsByOwnerParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/Card/GetCardsByOwner`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

export const putApiCardUpdateExpirationDateId = <TData = AxiosResponse<void>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/api/Card/UpdateExpirationDate/${id}`,undefined,options
    );
  }

export const deleteApiCardDeleteCardId = <TData = AxiosResponse<void>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/api/Card/DeleteCard/${id}`,options
    );
  }

export type PostApiCardCreateCardResult = AxiosResponse<Card>
export type GetApiCardGetAllCardsResult = AxiosResponse<Card[]>
export type GetApiCardGetCardByIdIdResult = AxiosResponse<Card>
export type GetApiCardGetCardByNumberResult = AxiosResponse<Card>
export type GetApiCardGetCardsByOwnerResult = AxiosResponse<Card[]>
export type PutApiCardUpdateExpirationDateIdResult = AxiosResponse<void>
export type DeleteApiCardDeleteCardIdResult = AxiosResponse<void>
